<div class="w-full flex flex-wrap"
     x-data="newFetch()"
>
  <%= simple_form_for(@product, url: @product.new_record ? dashboard_products_path : dashboard_product_path(@product.slug), remote: true,
                      defaults: {
                          input_html: {
                              class: "#{input_color_class} mt-2 resize-none",
                              autocomplete: "off"
                          },
                          wrapper_html: {
                              class: "mt-2 mb-4"
                          },
                          label_html: {
                              class: "#{label_color_class(size: "big")}"
                          }
                      },
                      html: {
                          class: "w-full "
                      }
      ) do |f| %>

    <div class="w-full mb-12 flex flex-wrap">
      <div class="w-full flex flex-wrap py-8 rounded border-2 shadow mb-4">
        <%= render Headers::Text.new(title: "Información básica", small: true, font: "small", padding_class: "px-8 pb-8") %>
        <div class="w-full px-8">
          <%= f.input :name, placeholder: "Nombre del producto", label: "Nombre del producto", input_html: {"x-on:input": "handleChange($event)"} %>
          <span name="product[name]_error" class="text-sm font-bold text-red-600"/>
        </div>
        <div class="w-full px-8">
          <%= f.input :description, as: :text, placeholder: "Descripción breve del producto", label: "Descripción", input_html: {"x-on:input": "handleChange($event)", "rows": "4"} %>
          <span name="product[description]_error" class="text-sm font-bold text-red-600"/>
        </div>
        <div class="w-full px-8">
          <%= f.input :price, as: :float, placeholder: "Precio del producto", label: "Precio", input_html: {"x-on:input": "handleChange($event)"} %>
          <span name="product[price]_error" class="text-sm font-bold text-red-600"/>
        </div>
      </div>
      <div class="w-full flex flex-wrap self-start rounded border-2 py-8 shadow mb-4">
        <%= render Headers::Text.new(title: "Inventario", small: true, font: "small", padding_class: "px-8 pb-8") %>
        <div class="w-full px-8 flex">
          <div class="w-7/12 mr-2">
            <%= f.input :public_stock,
                        placeholder: "Productos en stock",
                        label: "Cantidad disponible" %>
            <span name="product[public_stock]_error" class="text-sm font-bold text-red-600"/>
          </div>
          <div class="w-5/12 ml-2">
            <%= f.input :unlimited,
                        collection: [%w[SI true], %w[NO false]],
                        label: "Continuar vendiendo sin stock",
                        prompt: "Selecciona una opción"
            %>
            <span name="product[public_stock]_error" class="text-sm font-bold text-red-600"/>
          </div>
        </div>

        <div class="w-full px-8 flex">
          <div class="w-7/12 mr-2">
            <%= f.input :sku,
                        placeholder: "Código de referencia",
                        label: "SKU" %>
            <span name="product[public_stock]_error" class="text-sm font-bold text-red-600"/>
          </div>

        </div>
      </div>

      <div class="w-full flex rounded border-2 py-8 shadow mb-4 flex-wrap">
        <%= render Headers::Text.new(title: "Medidas de volumen", small: true, font: "small", padding_class: "px-8 pb-8") %>
        <div class="w-full flex px-8">
          <div class="w-7/12 mr-2">
            <%= f.input :quantity,
                        placeholder: "Medida de volumen",
                        label: "Medida de volumen" %>
            <span name="product[quantity]_error" class="text-sm font-bold text-red-600"/>
          </div>
          <div class="w-5/12 ml-2">
            <%= f.input :quantity_measure,
                        collection: Product.current_measures,
                        prompt: "Selecciona una unidad",
                        label: "Unidad del volumen"
            %>
            <span name="product[quantity_measure]_error" class="text-sm font-bold text-red-600"/>
          </div>
        </div>
      </div>

      <!--      <div class="w-full flex rounded border-2 py-8 shadow mb-4 flex-wrap">-->
      <%#= render Headers::Text.new(title: "Variantes", small: true, font: "small", padding_class: "px-8 pb-8") %>
      <!--        <div class="w-full px-8">-->
      <%#= f.simple_fields_for :aggregate_categorieas, AggregateCategory.new do |aggf| %>
      <%#= render Products::AggregateCategory::Form.new(f: aggf) %>
      <%# end %>
      <!--        </div>-->
      <!--      </div>-->

      <div class="w-full flex flex-wrap rounded border-2 py-8 shadow mb-4 ">
        <%= render Headers::Text.new(title: "Categorías", small: true, font: "small", padding_class: "px-8 pb-8") %>
        <div class="w-full px-8">
          <%= f.input :item_ids,
                      input_html: {
                          class: "js-multiple hidden invisible py-3",
                          multiple: "multiple"
                      },
                      label_html: {
                          class: label_color_class(size: "big")
                      },
                      collection: @place.items, prompt: "Categorías", label: "Selecciona una categoría" %>
          <span name="product[item_ids]_error" class="text-sm font-bold text-red-600"/>
        </div>
      </div>

      <div class="w-full flex justify-end">
        <%= f.button :submit,
                     data: {"disable-with": @product.new_record ? "Creando producto..." : "Actualizar producto"},
                     value: @product.new_record ? "Crear producto" : "Actualizar producto",
                     class: "#{main_color_button(size: "big", padding: "big", color: "dark")} mt-8"
        %>
      </div>
    </div>

  <% end %>
  <script type="text/javascript" charset="utf-8">
      function newFetch() {
          return {
              handleChange: function (e) {
                  e.target.classList.remove("border-red-500");
                  var element = document.querySelector(`[name="${e.target.name}_error"`);
                  if (element) {
                      element.innerHTML = "";
                  }
              }
          }
      }
  </script>

</div>
<%= javascript_packs_with_chunks_tag "dashboard/products/new", 'data-turbolinks-track': "reload" %>
